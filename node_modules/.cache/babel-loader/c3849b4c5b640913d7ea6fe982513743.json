{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/components/baseform/learn-1.js\";\nimport React from 'react';\nimport { Form, Select, Button, DatePicker } from \"antd\";\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass LearnReact extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initFormList = () => {\n      const getFieldDecorator = this.props.form.getFieldDecorator;\n      const formList = this.props.formList;\n      let formItemList = [];\n\n      if (formList && formList.length > 0) {\n        formList.forEach(item => {\n          let placeholder = item.placeholder,\n              type = item.type,\n              field = item.field,\n              initialValue = item.initialValue,\n              width = item.width; // 如果是Select的类型 需要调用一下options生成器\n\n          if (type === 'SELECT') {\n            const SELECT = React.createElement(FormItem, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            }, getFieldDecorator([field], {\n              initialValue\n            })(React.createElement(Select, {\n              placeholder: placeholder,\n              style: {\n                width: width\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, item.list.map(childItem => {\n              return React.createElement(Option, {\n                value: childItem.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 28\n                },\n                __self: this\n              }, childItem.name);\n            }))));\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      layout: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Form.create()(LearnReact);","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/components/baseform/learn-1.js"],"names":["React","Form","Select","Button","DatePicker","FormItem","Item","Option","LearnReact","Component","initFormList","getFieldDecorator","props","form","formList","formItemList","length","forEach","item","placeholder","type","field","initialValue","width","SELECT","list","map","childItem","id","name","render","create"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,UAA9B,QAA+C,MAA/C;AACA,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAtB;AACA,MAAMC,MAAM,GAAGL,MAAM,CAACK,MAAtB;;AAEA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SACvCC,YADuC,GACxB,MAAM;AAAA,YACXC,iBADW,GACW,KAAKC,KAAL,CAAWC,IADtB,CACXF,iBADW;AAEnB,YAAMG,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA5B;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,MAAT,GAAkB,CAAlC,EAAqC;AACnCF,QAAAA,QAAQ,CAACG,OAAT,CAAiBC,IAAI,IAAI;AAAA,cAClBC,WADkB,GAC+BD,IAD/B,CAClBC,WADkB;AAAA,cACLC,IADK,GAC+BF,IAD/B,CACLE,IADK;AAAA,cACCC,KADD,GAC+BH,IAD/B,CACCG,KADD;AAAA,cACQC,YADR,GAC+BJ,IAD/B,CACQI,YADR;AAAA,cACsBC,KADtB,GAC+BL,IAD/B,CACsBK,KADtB,EAEvB;;AACA,cAAIH,IAAI,KAAK,QAAb,EAAuB;AACrB,kBAAMI,MAAM,GACV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEIb,iBAAiB,CAAC,CAACU,KAAD,CAAD,EAAU;AACzBC,cAAAA;AADyB,aAAV,CAAjB,CAGE,oBAAC,MAAD;AACE,cAAA,WAAW,EAAEH,WADf;AAEE,cAAA,KAAK,EAAE;AAACI,gBAAAA,KAAK,EAAEA;AAAR,eAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAKIL,IAAI,CAACO,IAAL,CAAUC,GAAV,CAAcC,SAAS,IAAI;AACzB,qBAAO,oBAAC,MAAD;AAAQ,gBAAA,KAAK,EAAEA,SAAS,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJD,SAAS,CAACE,IADN,CAAP;AAGD,aAJD,CALJ,CAHF,CAFJ,CADF;AAsBD;AACF,SA3BD;AA4BD;AACF,KAnCsC;AAAA;;AAoCvCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AA1CsC;;AA6CzC,eAAe7B,IAAI,CAAC8B,MAAL,GAAcvB,UAAd,CAAf","sourcesContent":["import React from 'react'\nimport {Form, Select, Button, DatePicker} from \"antd\"\nconst FormItem = Form.Item\nconst Option = Select.Option\n\nclass LearnReact extends React.Component {\n  initFormList = () => {\n    const { getFieldDecorator } = this.props.form\n    const formList = this.props.formList\n    let formItemList = []\n    if (formList && formList.length > 0) {\n      formList.forEach(item => {\n        let {placeholder, type, field, initialValue, width} = item\n        // 如果是Select的类型 需要调用一下options生成器\n        if (type === 'SELECT') {\n          const SELECT =\n            <FormItem >\n              {\n                getFieldDecorator([field], {\n                  initialValue\n                })(\n                  <Select\n                    placeholder={placeholder}\n                    style={{width: width}}\n                  >\n                    {\n                      item.list.map(childItem => {\n                        return <Option value={childItem.id}>\n                          {childItem.name}\n                        </Option>\n                      })\n                    }\n                  </Select>\n                )\n              }\n\n            </FormItem>\n        }\n      })\n    }\n  }\n  render() {\n    return (\n      <Form layout='inline'>\n\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(LearnReact)"]},"metadata":{},"sourceType":"module"}