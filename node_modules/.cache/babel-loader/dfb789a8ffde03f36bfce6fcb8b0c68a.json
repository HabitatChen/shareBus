{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/page/form/login.js\";\nimport React from 'react';\nimport { Checkbox, Icon, Card, Form, Button, Input, message } from 'antd';\nconst FormItem = Form.Item;\n\nclass Forms extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = () => {\n      // 获取表单所有的值 return obj\n      let userObj = this.props.form.getFieldsValue();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          message.success(\"\".concat(userObj.userName, \" \\u606D\\u559C\\u60A8 \\u60A8\\u7684\\u5BC6\\u7801\\u662F\").concat(userObj.password));\n        }\n      }); // 获得所有字段\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\\u767B\\u9646\\u884C\\u5185\\u8868\\u5355\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u8D26\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\u767B\\u9646\")))), React.createElement(Card, {\n      title: \"\\u767B\\u9646\\u6C34\\u5E73\\u8868\\u5355\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"horizontal\",\n      style: {\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      initialValue: 'ck',\n      rules: [{\n        required: true,\n        message: '不能为空'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      initialValue: '123',\n      rules: [{\n        required: true,\n        message: '用户名不能为空'\n      }] // 配置表单规则\n\n    })(React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true // 配置表单规则\n\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\u8BB0\\u4F4F\\u5BC6\\u7801\")), React.createElement(\"a\", {\n      href: \"#\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\")), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleSubmit,\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"\\u767B\\u9646\")))));\n  }\n\n}\n\nexport default Form.create()(Forms);","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/page/form/login.js"],"names":["React","Checkbox","Icon","Card","Form","Button","Input","message","FormItem","Item","Forms","Component","handleSubmit","userObj","props","form","getFieldsValue","validateFields","err","values","success","userName","password","render","getFieldDecorator","width","initialValue","rules","required","valuePropName","float","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Checkbox, Icon, Card, Form, Button, Input, message } from 'antd'\n\nconst FormItem = Form.Item\nclass Forms extends React.Component {\n\n  handleSubmit = () => {\n    // 获取表单所有的值 return obj\n    let userObj = this.props.form.getFieldsValue()\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        message.success(`${userObj.userName} 恭喜您 您的密码是${userObj.password}`)\n      }\n    }) // 获得所有字段\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <div>\n        <Card title='登陆行内表单'>\n          <Form layout=\"inline\">\n            <FormItem>\n              <Input placeholder='请输入用户账号' />\n            </FormItem>\n            <FormItem>\n              <Input placeholder='请输入用户密码' />\n            </FormItem>\n            <FormItem>\n              <Button type='primary'>登陆</Button>\n            </FormItem>\n          </Form>\n        </Card>\n        <Card title='登陆水平表单'>\n          <Form layout='horizontal' style={{width:300}}>\n            <FormItem>\n              {\n                getFieldDecorator('userName', {\n                    initialValue: 'ck',\n                    rules: [\n                      {\n                        required: true,\n                        message: '不能为空'\n                      }\n                    ]\n                  }\n                )( <Input prefix={<Icon type='plus' />} placeholder='请输入用户名'/> )\n              }\n            </FormItem>\n            <FormItem>\n              {\n                getFieldDecorator('password', {\n                    initialValue: '123',\n                    rules: [\n                      {\n                        required: true,\n                        message: '用户名不能为空'\n                      }\n                    ] // 配置表单规则\n                  }\n                )( <Input placeholder='请输入密码'/> )\n              }\n            </FormItem>\n            <FormItem>\n              {\n                getFieldDecorator('remember', {\n                    valuePropName: 'checked',\n                    initialValue: true, // 配置表单规则\n                  }\n                )( <Checkbox>记住密码</Checkbox> )\n              }\n              <a href=\"#\" style={{float: 'right'}}>忘记密码</a>\n            </FormItem>\n            <FormItem>\n              <Button onClick={this.handleSubmit} type='primary'>登陆</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default Form.create()(Forms)\n"]},"metadata":{},"sourceType":"module"}