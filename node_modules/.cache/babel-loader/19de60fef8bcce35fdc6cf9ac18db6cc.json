{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/utils/utils.js\";\nimport { Select } from \"antd\";\nconst Option = Select.Option;\nexport default {\n  formateDate: time => {\n    if (!time) {\n      alert('hello');\n      return '';\n    }\n\n    let date = new Date(time);\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + '  ' + date.getHours() + ':' + (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':' + (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\n  },\n\n  pagination(data, callback) {\n    return {\n      // 属性名是根据 pagination 组件的属性名写的\n      onChange: current => {\n        callback(current);\n      },\n      current: data.result.page,\n      // 从数据里面去取\n      pageSize: data.result.page_size,\n      total: data.result.total_count,\n      showTotal: () => {\n        return \"\\u5171\".concat(data.result.total_count, \"\\u6761\");\n      },\n      showQuickJumper: true\n    };\n  },\n\n  getOptionList(data) {\n    if (!data) {\n      return [];\n    }\n\n    let options = [React.createElement(Option, {\n      value: \"0\",\n      key: \"all_key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\u5168\\u90E8\")];\n    data.map(item => {\n      options.push(React.createElement(Option, {\n        value: item.id,\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, item.name));\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/utils/utils.js"],"names":["Select","Option","formateDate","time","alert","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pagination","data","callback","onChange","current","result","page","pageSize","page_size","total","total_count","showTotal","showQuickJumper","getOptionList","options","map","item","push","id","name"],"mappings":";AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,MAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;AAEA,eAAe;AACbC,EAAAA,WAAW,EAAGC,IAAD,IAAU;AACrB,QAAI,CAACA,IAAL,EAAW;AACTC,MAAAA,KAAK,CAAC,OAAD,CAAL;AACA,aAAO,EAAP;AACD;;AACD,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAX;AACA,WAAOE,IAAI,CAACE,WAAL,KAAqB,GAArB,IACJF,IAAI,CAACG,QAAL,KAAgB,CADZ,IACiB,GADjB,GAELH,IAAI,CAACI,OAAL,EAFK,GAEY,IAFZ,GAGLJ,IAAI,CAACK,QAAL,EAHK,GAGa,GAHb,IAIJL,IAAI,CAACM,UAAL,KAAoB,EAApB,GAAyB,MAAMN,IAAI,CAACM,UAAL,EAA/B,GAAmDN,IAAI,CAACM,UAAL,EAJ/C,IAIoE,GAJpE,IAKJN,IAAI,CAACO,UAAL,KAAoB,EAApB,GAAyB,MAAMP,IAAI,CAACO,UAAL,EAA/B,GAAmDP,IAAI,CAACO,UAAL,EAL/C,CAAP;AAMD,GAbY;;AAebC,EAAAA,UAAU,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACzB,WAAO;AACL;AACAC,MAAAA,QAAQ,EAAGC,OAAD,IAAa;AACrBF,QAAAA,QAAQ,CAACE,OAAD,CAAR;AACD,OAJI;AAKLA,MAAAA,OAAO,EAAEH,IAAI,CAACI,MAAL,CAAYC,IALhB;AAKsB;AAC3BC,MAAAA,QAAQ,EAAEN,IAAI,CAACI,MAAL,CAAYG,SANjB;AAOLC,MAAAA,KAAK,EAAER,IAAI,CAACI,MAAL,CAAYK,WAPd;AAQLC,MAAAA,SAAS,EAAE,MAAM;AACf,+BAAWV,IAAI,CAACI,MAAL,CAAYK,WAAvB;AACD,OAVI;AAWLE,MAAAA,eAAe,EAAE;AAXZ,KAAP;AAaD,GA7BY;;AA8BbC,EAAAA,aAAa,CAACZ,IAAD,EAAO;AAClB,QAAI,CAACA,IAAL,EAAW;AACT,aAAO,EAAP;AACD;;AACD,QAAIa,OAAO,GAAG,CAAC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAkB,MAAA,GAAG,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAD,CAAd;AACAb,IAAAA,IAAI,CAACc,GAAL,CAASC,IAAI,IAAI;AACfF,MAAAA,OAAO,CAACG,IAAR,CACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,IAAI,CAACE,EAApB;AAAwB,QAAA,GAAG,EAAEF,IAAI,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,IAAI,CAACG,IAA5C,CADF;AAGD,KAJD;AAKD;;AAxCY,CAAf","sourcesContent":["import { Select } from \"antd\"\nconst Option = Select.Option\n\nexport default {\n  formateDate: (time) => {\n    if (!time) {\n      alert('hello')\n      return ''\n    }\n    let date = new Date(time)\n    return date.getFullYear() + '-' +\n      (date.getMonth()+1) + '-' +\n      date.getDate() + '  ' +\n      date.getHours() + ':' +\n      (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':' +\n      (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds())\n  },\n\n  pagination(data, callback) {\n    return {\n      // 属性名是根据 pagination 组件的属性名写的\n      onChange: (current) => {\n        callback(current)\n      },\n      current: data.result.page, // 从数据里面去取\n      pageSize: data.result.page_size,\n      total: data.result.total_count,\n      showTotal: () => {\n        return `共${data.result.total_count}条`\n      },\n      showQuickJumper: true\n    }\n  },\n  getOptionList(data) {\n    if (!data) {\n      return []\n    }\n    let options = [<Option value='0' key='all_key'>全部</Option>]\n    data.map(item => {\n      options.push(\n        <Option value={item.id} key={item.id}>{item.name}</Option>\n      )\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}