{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/page/user/index.js\";\nimport React from 'react';\nimport { Card, Button, Form, Table } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils/utils';\nimport FilterForm from './../../components/baseform';\nexport default class User extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      pagination: {},\n      selectedRowKeys: '',\n      selectedRowItem: {},\n      selectedIds: '',\n      selectedRows: []\n    };\n    this.params = {\n      page: 2\n    };\n\n    this.onRowClick = (record, index) => {\n      console.log('111');\n      console.log(record, index);\n      let selectedRowKeys = [index];\n      this.setState({\n        selectedRowKeys,\n        selectedRowItem: record\n      });\n    };\n\n    this.formList = [{\n      type: 'SELECT',\n      label: '城市',\n      field: 'city_id',\n      placeholder: '全部',\n      width: 100,\n      initialValue: '1',\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '北京'\n      }, {\n        id: '2',\n        name: '天津'\n      }, {\n        id: '3',\n        name: '杭州'\n      }]\n    }, {\n      type: 'INPUT',\n      label: '用户名',\n      field: 'user_name',\n      placeholder: '请输入用户名称',\n      width: 100\n    }, {\n      type: 'INPUT',\n      label: '手机号',\n      field: 'user_mobile',\n      placeholder: '请输入用户手机号',\n      width: 100\n    }, {\n      type: 'DATE',\n      label: '请选择入职日期',\n      field: 'user_date',\n      placeholder: '请输入日期',\n      width: 100\n    }];\n\n    this.handleFormSubmit = params => {\n      this.params = params;\n      this.requestList();\n    };\n\n    this.requestList = () => {\n      axios.requestList(this, '/user/list', this.params);\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  } // 表格单行点击\n  // 作用： 1.存该条数据 selectedItem,\n  // 2. selectedId ==> 对应 rowSelection 中的 selectedRowKeys\n\n\n  render() {\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        console.log('on change selectedRowKeys');\n        console.log(selectedRowKeys);\n        let ids = [];\n        selectedRows.map(item => {\n          ids.push(item.id);\n        });\n        this.setState({\n          selectedRowKeys,\n          // 这个是必须的\n          selectedIds: ids,\n          // 附加的\n          selectedRows: selectedRows // 多选时 把选中的所有数据存起来 方便管理 onRow 会存单条数据\n\n        });\n      }\n    };\n    const columns = [{\n      title: 'id',\n      dataIndex: 'id'\n    }, {\n      title: '用户名',\n      dataIndex: 'username'\n    }, {\n      title: '性别',\n      dataIndex: 'sex',\n      render: sex => {\n        return sex === '1' ? '男' : '女';\n      }\n    }, {\n      title: '状态',\n      dataIndex: 'state',\n      render: state => {\n        return {\n          '1': 'aaa',\n          '2': 'bbb',\n          '3': 'ccc',\n          '4': 'ddd'\n        }[state];\n      }\n    }, {\n      title: '爱好',\n      dataIndex: 'interest',\n      render: state => {\n        return {\n          '1': 'aaa',\n          '2': 'bbb',\n          '3': 'ccc',\n          '4': 'ddd',\n          '5': 'aaa',\n          '6': 'bbb',\n          '7': 'ccc',\n          '8': 'ddd'\n        }[state];\n      }\n    }, {\n      title: '生日',\n      dataIndex: 'birthday'\n    }, {\n      title: '联系地址',\n      dataIndex: 'address'\n    }, {\n      title: '早起时间',\n      dataIndex: 'time'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(FilterForm, {\n      formList: this.formList,\n      filterSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.openOrderDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\u8BA2\\u5355\\u8BE6\\u60C5\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"\\u7ED3\\u675F\\u8BA2\\u5355\")), React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      rowSelection: rowSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            // row 当前行被点击之后的回调\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/page/user/index.js"],"names":["React","Card","Button","Form","Table","axios","Utils","FilterForm","User","Component","state","list","pagination","selectedRowKeys","selectedRowItem","selectedIds","selectedRows","params","page","onRowClick","record","index","console","log","setState","formList","type","label","field","placeholder","width","initialValue","id","name","handleFormSubmit","requestList","componentDidMount","render","rowSelection","onChange","ids","map","item","push","columns","title","dataIndex","sex","openOrderDetail","onClick"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card, Button, Form, Table} from 'antd'\nimport axios from './../../axios'\nimport Utils from './../../utils/utils'\nimport FilterForm from './../../components/baseform'\n\nexport default class User extends React.Component {\n\n  state = {\n    list: [],\n    pagination: {},\n    selectedRowKeys: '',\n    selectedRowItem: {},\n    selectedIds: '',\n    selectedRows: []\n  }\n\n  params = {\n    page: 2,\n  }\n\n  componentDidMount() {\n    this.requestList()\n  }\n\n  // 表格单行点击\n  // 作用： 1.存该条数据 selectedItem,\n  // 2. selectedId ==> 对应 rowSelection 中的 selectedRowKeys\n  onRowClick = (record, index) => {\n    console.log('111')\n    console.log(record, index)\n    let selectedRowKeys = [index]\n    this.setState({\n      selectedRowKeys,\n      selectedRowItem: record\n    })\n  }\n\n    formList = [\n      {\n        type: 'SELECT',\n        label: '城市',\n        field: 'city_id',\n        placeholder: '全部',\n        width: 100,\n        initialValue: '1',\n        list: [\n          {id: '0', name: '全部'},\n          {id: '1', name: '北京'},\n          {id: '2', name: '天津'},\n          {id: '3', name: '杭州'}\n        ]\n      },\n    {\n      type: 'INPUT',\n      label: '用户名',\n      field: 'user_name',\n      placeholder: '请输入用户名称',\n      width: 100,\n    },\n    {\n      type: 'INPUT',\n      label: '手机号',\n      field: 'user_mobile',\n      placeholder: '请输入用户手机号',\n      width: 100,\n    },\n    {\n      type: 'DATE',\n      label: '请选择入职日期',\n      field: 'user_date',\n      placeholder: '请输入日期',\n      width: 100,\n    }\n  ]\n\n  handleFormSubmit = (params) => {\n    this.params = params\n    this.requestList()\n  }\n\n  requestList = () => {\n    axios.requestList(this, '/user/list', this.params)\n  }\n\n  render() {\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        console.log('on change selectedRowKeys')\n        console.log(selectedRowKeys)\n        let ids = []\n        selectedRows.map(item => {\n          ids.push(item.id)\n        })\n        this.setState({\n          selectedRowKeys, // 这个是必须的\n          selectedIds: ids, // 附加的\n          selectedRows: selectedRows // 多选时 把选中的所有数据存起来 方便管理 onRow 会存单条数据\n        })\n      }\n    }\n    const columns = [\n      {\n        title: 'id',\n        dataIndex: 'id'\n      },\n      {\n        title: '用户名',\n        dataIndex: 'username'\n      },\n      {\n        title: '性别',\n        dataIndex: 'sex',\n        render: (sex) => {\n          return sex === '1' ? '男' : '女'\n        }\n      },\n      {\n        title: '状态',\n        dataIndex: 'state',\n        render: (state) => {\n          return {\n            '1': 'aaa',\n            '2': 'bbb',\n            '3': 'ccc',\n            '4': 'ddd'\n          }[state]\n        }\n      },\n      {\n        title: '爱好',\n        dataIndex: 'interest',\n        render: (state) => {\n          return {\n            '1': 'aaa',\n            '2': 'bbb',\n            '3': 'ccc',\n            '4': 'ddd',\n            '5': 'aaa',\n            '6': 'bbb',\n            '7': 'ccc',\n            '8': 'ddd'\n          }[state]\n        }\n      },\n      {\n        title: '生日',\n        dataIndex: 'birthday'\n      },\n      {\n        title: '联系地址',\n        dataIndex: 'address'\n      },\n      {\n        title: '早起时间',\n        dataIndex: 'time'\n      }\n    ]\n    return (\n      <div>\n        <Card>\n          <FilterForm formList={this.formList} filterSubmit={this.handleFormSubmit} />\n        </Card>\n        <Card>\n          <Button onClick={this.openOrderDetail}>订单详情</Button>\n          <Button>结束订单</Button>\n        </Card>\n        <div className='content-wrap'>\n          <Table\n            bordered\n            columns={columns}\n            dataSource={this.state.list}\n            pagination={this.state.pagination}\n            rowSelection={rowSelection}\n            onRow={(record, index) => {\n              return {\n                onClick: () => { // row 当前行被点击之后的回调\n                  this.onRowClick(record, index)\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}