{"ast":null,"code":"import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\nexport default class Axios {\n  static jsonp(options) {\n    return new Promise((resolve, reject) => {\n      JsonP(options.url, {\n        param: 'callback'\n      }, function (err, response) {\n        // TODO\n        if (response.status === 'success') {\n          resolve(response);\n        } else {\n          reject(response.message);\n        }\n      });\n    });\n  }\n\n  static ajax(options) {\n    let baseUrl = 'https://www.easy-mock.com/mock/5d6008c4166aea330e4cfcd3/mockapi';\n    return new Promise((resolve, reject) => {\n      axios({\n        url: options.url,\n        method: 'get',\n        baseURL: baseUrl,\n        timeout: 5000,\n        params: options.data && options.data.params || ''\n      }).then(response => {\n        console.log(1111);\n        console.log(response);\n\n        if (response.status === 200) {\n          let res = response.data;\n\n          if (res.code === 0) {\n            resolve(res);\n          } else {\n            Modal.info({\n              title: '提示',\n              content: res.msg\n            });\n          }\n        } else {\n          console.log(2222);\n          reject(response.data);\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/axios/index.js"],"names":["JsonP","axios","Modal","Axios","jsonp","options","Promise","resolve","reject","url","param","err","response","status","message","ajax","baseUrl","method","baseURL","timeout","params","data","then","console","log","res","code","info","title","content","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,eAAe,MAAMC,KAAN,CAAY;AACzB,SAAOC,KAAP,CAAaC,OAAb,EAAsB;AACpB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCR,MAAAA,KAAK,CAACK,OAAO,CAACI,GAAT,EAAc;AACjBC,QAAAA,KAAK,EAAE;AADU,OAAd,EAEF,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC1B;AACA,YAAIA,QAAQ,CAACC,MAAT,KAAoB,SAAxB,EAAmC;AACjCN,UAAAA,OAAO,CAACK,QAAD,CAAP;AACD,SAFD,MAEO;AACLJ,UAAAA,MAAM,CAACI,QAAQ,CAACE,OAAV,CAAN;AACD;AACF,OATI,CAAL;AAUD,KAXM,CAAP;AAYD;;AAED,SAAOC,IAAP,CAAYV,OAAZ,EAAqB;AACnB,QAAIW,OAAO,GAAG,iEAAd;AACA,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,KAAK,CAAC;AACJQ,QAAAA,GAAG,EAAEJ,OAAO,CAACI,GADT;AAEJQ,QAAAA,MAAM,EAAE,KAFJ;AAGJC,QAAAA,OAAO,EAAEF,OAHL;AAIJG,QAAAA,OAAO,EAAE,IAJL;AAKJC,QAAAA,MAAM,EAAGf,OAAO,CAACgB,IAAR,IAAgBhB,OAAO,CAACgB,IAAR,CAAaD,MAA9B,IAAyC;AAL7C,OAAD,CAAL,CAMGE,IANH,CAMSV,QAAD,IAAc;AACpBW,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;;AACA,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAIY,GAAG,GAAEb,QAAQ,CAACS,IAAlB;;AACA,cAAII,GAAG,CAACC,IAAJ,KAAa,CAAjB,EAAoB;AAClBnB,YAAAA,OAAO,CAACkB,GAAD,CAAP;AACD,WAFD,MAEO;AACLvB,YAAAA,KAAK,CAACyB,IAAN,CAAW;AACTC,cAAAA,KAAK,EAAE,IADE;AAETC,cAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFJ,aAAX;AAID;AACF,SAVD,MAUO;AACLP,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAhB,UAAAA,MAAM,CAACI,QAAQ,CAACS,IAAV,CAAN;AACD;AACF,OAvBD;AAwBD,KAzBM,CAAP;AA0BD;;AA5CwB","sourcesContent":["import JsonP from 'jsonp'\nimport axios from 'axios'\nimport { Modal } from 'antd'\n\nexport default class Axios {\n  static jsonp(options) {\n    return new Promise((resolve, reject) => {\n      JsonP(options.url, {\n        param: 'callback'\n      }, function (err, response) {\n        // TODO\n        if (response.status === 'success') {\n          resolve(response)\n        } else {\n          reject(response.message)\n        }\n      })\n    })\n  }\n\n  static ajax(options) {\n    let baseUrl = 'https://www.easy-mock.com/mock/5d6008c4166aea330e4cfcd3/mockapi'\n    return new Promise((resolve, reject) => {\n      axios({\n        url: options.url,\n        method: 'get',\n        baseURL: baseUrl,\n        timeout: 5000,\n        params: (options.data && options.data.params) || ''\n      }).then((response) => {\n        console.log(1111)\n        console.log(response)\n        if (response.status === 200) {\n          let res= response.data\n          if (res.code === 0) {\n            resolve(res)\n          } else {\n            Modal.info({\n              title: '提示',\n              content: res.msg\n            })\n          }\n        } else {\n          console.log(2222)\n          reject(response.data)\n        }\n      })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}