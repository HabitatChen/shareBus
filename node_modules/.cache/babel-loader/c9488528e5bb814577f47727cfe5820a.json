{"ast":null,"code":"import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\nexport default class Axios {\n  static jsonp(options) {\n    return new Promise((resolve, reject) => {\n      JsonP(options.url, {\n        param: 'callback'\n      }, function (err, response) {\n        // TODO\n        if (response.status === 'success') {\n          resolve(response);\n        } else {\n          reject(response.message);\n        }\n      });\n    });\n  }\n\n  static ajax(options) {\n    let loading;\n\n    if (options.data && options.data.isShowLoading !== false) {\n      loading = document.getElementById('ajaxLoading');\n      loading.style.display = 'block';\n    }\n\n    let baseUrl = 'https://www.easy-mock.com/mock/5d6008c4166aea330e4cfcd3/mockapi';\n    return new Promise((resolve, reject) => {\n      axios({\n        url: options.url,\n        method: 'get',\n        baseURL: baseUrl,\n        timeout: 5000,\n        params: options.data && options.data.params || ''\n      }).then(response => {\n        if (options.data && options.data.isShowLoading !== false) {\n          loading = document.getElementById('ajaxLoading');\n          loading.style.display = 'block';\n        }\n\n        if (response.status === 200) {\n          let res = response.data;\n\n          if (res.code === 0) {\n            resolve(res);\n          } else {\n            Modal.info({\n              title: '提示',\n              content: res.msg\n            });\n          }\n        } else {\n          reject(response.data);\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/axios/index.js"],"names":["JsonP","axios","Modal","Axios","jsonp","options","Promise","resolve","reject","url","param","err","response","status","message","ajax","loading","data","isShowLoading","document","getElementById","style","display","baseUrl","method","baseURL","timeout","params","then","res","code","info","title","content","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,eAAe,MAAMC,KAAN,CAAY;AACzB,SAAOC,KAAP,CAAaC,OAAb,EAAsB;AACpB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCR,MAAAA,KAAK,CAACK,OAAO,CAACI,GAAT,EAAc;AACjBC,QAAAA,KAAK,EAAE;AADU,OAAd,EAEF,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC1B;AACA,YAAIA,QAAQ,CAACC,MAAT,KAAoB,SAAxB,EAAmC;AACjCN,UAAAA,OAAO,CAACK,QAAD,CAAP;AACD,SAFD,MAEO;AACLJ,UAAAA,MAAM,CAACI,QAAQ,CAACE,OAAV,CAAN;AACD;AACF,OATI,CAAL;AAUD,KAXM,CAAP;AAYD;;AAED,SAAOC,IAAP,CAAYV,OAAZ,EAAqB;AACnB,QAAIW,OAAJ;;AACA,QAAIX,OAAO,CAACY,IAAR,IAAgBZ,OAAO,CAACY,IAAR,CAAaC,aAAb,KAA+B,KAAnD,EAA0D;AACxDF,MAAAA,OAAO,GAAIG,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAX;AACAJ,MAAAA,OAAO,CAACK,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACD;;AACD,QAAIC,OAAO,GAAG,iEAAd;AACA,WAAO,IAAIjB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,KAAK,CAAC;AACJQ,QAAAA,GAAG,EAAEJ,OAAO,CAACI,GADT;AAEJe,QAAAA,MAAM,EAAE,KAFJ;AAGJC,QAAAA,OAAO,EAAEF,OAHL;AAIJG,QAAAA,OAAO,EAAE,IAJL;AAKJC,QAAAA,MAAM,EAAGtB,OAAO,CAACY,IAAR,IAAgBZ,OAAO,CAACY,IAAR,CAAaU,MAA9B,IAAyC;AAL7C,OAAD,CAAL,CAMGC,IANH,CAMShB,QAAD,IAAc;AACpB,YAAIP,OAAO,CAACY,IAAR,IAAgBZ,OAAO,CAACY,IAAR,CAAaC,aAAb,KAA+B,KAAnD,EAA0D;AACxDF,UAAAA,OAAO,GAAIG,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAX;AACAJ,UAAAA,OAAO,CAACK,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACD;;AACD,YAAIV,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAIgB,GAAG,GAAEjB,QAAQ,CAACK,IAAlB;;AACA,cAAIY,GAAG,CAACC,IAAJ,KAAa,CAAjB,EAAoB;AAClBvB,YAAAA,OAAO,CAACsB,GAAD,CAAP;AACD,WAFD,MAEO;AACL3B,YAAAA,KAAK,CAAC6B,IAAN,CAAW;AACTC,cAAAA,KAAK,EAAE,IADE;AAETC,cAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFJ,aAAX;AAID;AACF,SAVD,MAUO;AACL1B,UAAAA,MAAM,CAACI,QAAQ,CAACK,IAAV,CAAN;AACD;AACF,OAxBD;AAyBD,KA1BM,CAAP;AA2BD;;AAlDwB","sourcesContent":["import JsonP from 'jsonp'\nimport axios from 'axios'\nimport { Modal } from 'antd'\n\nexport default class Axios {\n  static jsonp(options) {\n    return new Promise((resolve, reject) => {\n      JsonP(options.url, {\n        param: 'callback'\n      }, function (err, response) {\n        // TODO\n        if (response.status === 'success') {\n          resolve(response)\n        } else {\n          reject(response.message)\n        }\n      })\n    })\n  }\n\n  static ajax(options) {\n    let loading\n    if (options.data && options.data.isShowLoading !== false) {\n      loading  = document.getElementById('ajaxLoading')\n      loading.style.display = 'block'\n    }\n    let baseUrl = 'https://www.easy-mock.com/mock/5d6008c4166aea330e4cfcd3/mockapi'\n    return new Promise((resolve, reject) => {\n      axios({\n        url: options.url,\n        method: 'get',\n        baseURL: baseUrl,\n        timeout: 5000,\n        params: (options.data && options.data.params) || ''\n      }).then((response) => {\n        if (options.data && options.data.isShowLoading !== false) {\n          loading  = document.getElementById('ajaxLoading')\n          loading.style.display = 'block'\n        }\n        if (response.status === 200) {\n          let res= response.data\n          if (res.code === 0) {\n            resolve(res)\n          } else {\n            Modal.info({\n              title: '提示',\n              content: res.msg\n            })\n          }\n        } else {\n          reject(response.data)\n        }\n      })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}