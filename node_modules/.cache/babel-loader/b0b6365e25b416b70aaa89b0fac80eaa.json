{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/page/city/index.js\";\nimport React from 'react';\nimport { message, Card, Button, Table, Form, Select, Modal } from 'antd';\nimport axios from './../../axios';\nimport Utils from './../../utils/utils';\nimport FilterForm from \"../../components/city/FilterForm\";\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nexport default class City extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      isShowOpenCity: false\n    };\n    this.params = {\n      page: 1\n    };\n\n    this.handleSubmit = () => {\n      let cityInfo = this.cityForm.props.form.getFieldsValue();\n      axios.ajax({\n        url: 'city/open',\n        data: {\n          params: cityInfo\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          message.success('开通成功');\n          this.setState({\n            isShowOpenCity: false\n          });\n          this.request();\n        }\n      });\n    };\n\n    this.request = () => {\n      let _this = this;\n\n      axios.ajax({\n        url: 'open_city',\n        data: {\n          params: {\n            page: this.params.page\n          }\n        }\n      }).then(res => {\n        this.setState({\n          list: res.result.item_list.map((item, index) => {\n            item.key = index;\n            return item;\n          }),\n          pagination: Utils.pagination(res, cur => {\n            _this.params.page = cur;\n\n            _this.request();\n          })\n        });\n      });\n    };\n\n    this.handleOpenCity = () => {\n      this.setState({\n        isShowOpenCity: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.request();\n  } // 处理弹框确定按钮的提交\n\n\n  render() {\n    const columns = [{\n      title: '城市ID',\n      dataIndex: 'id'\n    }, {\n      title: '城市名称',\n      dataIndex: 'name'\n    }, {\n      title: '用车模式',\n      dataIndex: 'mode',\n      render: mode => {\n        return mode == 1 ? '停车点' : '禁停区';\n      }\n    }, {\n      title: '营运模式',\n      dataIndex: 'op_mode',\n      render: op_mode => {\n        return op_mode == 1 ? '停车点' : '禁停区';\n      }\n    }, {\n      title: '授权加盟商',\n      dataIndex: 'franchisee_name'\n    }, {\n      title: '城市管理员',\n      dataIndex: 'city_admins',\n\n      render(arr) {\n        return arr.map(item => {\n          return item.user_name;\n        }).join(',');\n      }\n\n    }, {\n      title: '城市开通时间',\n      dataIndex: 'open_time'\n    }, {\n      title: '操作时间',\n      dataIndex: 'update_time',\n      render: update_time => {\n        return Utils.formateDate(update_time);\n      }\n    }, {\n      title: '操作人',\n      dataIndex: 'sys_user_name'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(FilterForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleOpenCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"\\u5F00\\u901A\")), React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      title: \"\\u5F00\\u901A\\u57CE\\u5E02\",\n      visible: this.state.isShowOpenCity,\n      onCancel: () => {\n        this.setState({\n          isShowOpenCity: false\n        });\n      },\n      onOk: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(OpenCityForm, {\n      wrappedComponentRef: ref => {\n        this.cityForm = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass OpenCityFormItem extends React.Component {\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      layout: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(FormItem, Object.assign({\n      label: \"\\u9009\\u62E9\\u57CE\\u5E02\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), getFieldDecorator('city_id', {\n      initialValue: ''\n    })(React.createElement(Select, {\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" \\u5168\\u90E8 \"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \" \\u5317\\u4EAC \"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \" \\u5929\\u6D25\\u5E02 \")))), React.createElement(FormItem, Object.assign({\n      label: \"\\u8425\\u8FD0\\u6A21\\u5F0F\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), getFieldDecorator('op_mode', {\n      initialValue: ''\n    })(React.createElement(Select, {\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \" \\u81EA\\u8425 \"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \" \\u52A0\\u76DF \")))), React.createElement(FormItem, Object.assign({\n      label: \"\\u7528\\u8F66\\u6A21\\u5F0F\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), getFieldDecorator('mode', {\n      initialValue: 1\n    })(React.createElement(Select, {\n      style: {\n        width: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \" \\u6307\\u5B9A\\u505C\\u8F66\\u70B9 \"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \" \\u7981\\u505C\\u533A \")))));\n  }\n\n}\n\nconst OpenCityForm = Form.create()(OpenCityFormItem);","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/page/city/index.js"],"names":["React","message","Card","Button","Table","Form","Select","Modal","axios","Utils","FilterForm","FormItem","Item","Option","City","Component","state","list","isShowOpenCity","params","page","handleSubmit","cityInfo","cityForm","props","form","getFieldsValue","ajax","url","data","then","res","code","success","setState","request","_this","result","item_list","map","item","index","key","pagination","cur","handleOpenCity","componentDidMount","render","columns","title","dataIndex","mode","op_mode","arr","user_name","join","update_time","formateDate","ref","OpenCityFormItem","formItemLayout","labelCol","span","wrapperCol","getFieldDecorator","initialValue","width","OpenCityForm","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {message, Card, Button, Table, Form, Select, Modal } from 'antd'\nimport axios from './../../axios'\nimport Utils from './../../utils/utils'\nimport FilterForm from \"../../components/city/FilterForm\"\nconst FormItem = Form.Item\nconst Option = Select.Option\n\nexport default class City extends React.Component {\n\n  state = {\n    list: [],\n    isShowOpenCity: false\n  }\n\n  params = {\n    page: 1\n  }\n\n  componentDidMount() {\n    this.request()\n  }\n\n  // 处理弹框确定按钮的提交\n  handleSubmit = () => {\n    let cityInfo = this.cityForm.props.form.getFieldsValue()\n    axios.ajax({\n      url: 'city/open',\n      data: {\n        params: cityInfo\n      }\n    }).then((res) => {\n      if (res.code == 0) {\n        message.success('开通成功')\n        this.setState({\n          isShowOpenCity: false\n        })\n        this.request()\n      }\n    })\n  }\n\n  request = () => {\n    let _this = this\n    axios.ajax({\n      url: 'open_city',\n      data: {\n        params: {\n          page: this.params.page\n        }\n      }\n\n    }).then((res) => {\n      this.setState({\n        list: res.result.item_list.map((item, index) => {\n          item.key = index\n          return item\n        }),\n        pagination: Utils.pagination(res, (cur) => {\n          _this.params.page = cur\n          _this.request()\n        })\n      })\n    })\n  }\n\n  // 开通城市\n  handleOpenCity = () => {\n    this.setState({\n      isShowOpenCity: true\n    })\n  }\n\n  render() {\n    const columns = [\n      {\n        title: '城市ID',\n        dataIndex: 'id'\n      },\n      {\n        title: '城市名称',\n        dataIndex: 'name'\n      },\n      {\n        title: '用车模式',\n        dataIndex: 'mode',\n        render: (mode) => {\n          return mode == 1 ? '停车点' : '禁停区'\n        }\n      },{\n        title: '营运模式',\n        dataIndex: 'op_mode',\n        render: (op_mode) => {\n          return op_mode == 1 ? '停车点' : '禁停区'\n        }\n      },{\n        title: '授权加盟商',\n        dataIndex: 'franchisee_name'\n      },{\n        title: '城市管理员',\n        dataIndex: 'city_admins',\n        render(arr) {\n          return arr.map(item => {\n            return item.user_name;\n          }).join(',')\n        }\n      },{\n        title: '城市开通时间',\n        dataIndex: 'open_time',\n      }\n      ,{\n        title: '操作时间',\n        dataIndex: 'update_time',\n        render: (update_time) => {\n          return Utils.formateDate(update_time)\n        }\n      },{\n        title: '操作人',\n        dataIndex: 'sys_user_name'\n      },\n\n    ]\n    return (\n      <div>\n        <Card>\n          <FilterForm/>\n        </Card>\n        <Card>\n          <Button type='primary' onClick={this.handleOpenCity}>开通</Button>\n        </Card>\n        <div className='content-wrap'>\n          <Table\n            bordered\n            columns={columns}\n            dataSource={this.state.list}\n            pagination={this.state.pagination}\n          />\n        </div>\n\n        <Modal\n          title='开通城市'\n          visible={this.state.isShowOpenCity}\n          onCancel={() => {\n            this.setState({\n              isShowOpenCity: false\n            })\n          }}\n          onOk={this.handleSubmit}\n\n        >\n          <OpenCityForm wrappedComponentRef={(ref) => {this.cityForm = ref}}/>\n        </Modal>\n\n      </div>\n    )\n  }\n}\n\nclass OpenCityFormItem extends React.Component {\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      }\n    }\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Form layout='horizontal'>\n        <FormItem label='选择城市' {...formItemLayout}>\n          {\n            getFieldDecorator('city_id', {\n              initialValue: ''\n            })(\n              <Select style={{width: 100}}>\n                <Option value=''> 全部 </Option>\n                <Option value='1'> 北京 </Option>\n                <Option value='2'> 天津市 </Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label='营运模式' {...formItemLayout}>\n          {\n            getFieldDecorator('op_mode', {\n              initialValue: ''\n            })(\n              <Select style={{width: 100}}>\n                <Option value='1'> 自营 </Option>\n                <Option value='2'> 加盟 </Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label='用车模式' {...formItemLayout}>\n          {\n            getFieldDecorator('mode', {\n              initialValue: 1\n            })(\n              <Select style={{width: 100}}>\n                <Option value='1'> 指定停车点 </Option>\n                <Option value='2'> 禁停区 </Option>\n              </Select>\n            )\n          }\n        </FormItem>\n      </Form>\n    )\n  }\n}\n\nconst OpenCityForm = Form.create()(OpenCityFormItem)"]},"metadata":{},"sourceType":"module"}