{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/page/table/basicTable.js\";\nimport React from 'react';\nimport { Modal, Card, Table, Button, message } from 'antd';\nimport axios from '../../axios/index';\nimport Utils from '../../utils/utils';\nexport default class BasicTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource: [],\n      dataSource2: [],\n      dataSource3: [],\n      selectRowKeys: [],\n      selectedIds: [],\n      selectedItem: ''\n    };\n\n    this.requestTableData = () => {\n      axios.ajax({\n        url: '/table/list',\n        data: {\n          params: {\n            page: 1\n          }\n        }\n      }).then(res => {\n        if (res.code === 0) {\n          res.result.map((item, index) => {\n            return item.key === index;\n          });\n          this.setState({\n            dataSource3: res.result\n          });\n        }\n      });\n    };\n\n    this.onRowClick = (record, index) => {\n      let selectKey = [index]; // 为什么是数组 因为有可能是多选的\n\n      console.log('here console');\n      console.log(selectKey);\n      console.log(record);\n      this.setState({\n        selectedRowKeys: selectKey,\n        // 然后把当前所中的key值和当前选中的内容项保存到state中\n        selectedItem: record\n      });\n    };\n\n    this.handleDelete = () => {\n      const _this$state = this.state,\n            selectedIds = _this$state.selectedIds,\n            selectedItem = _this$state.selectedItem;\n      Modal.warning({\n        title: '删除',\n        content: \"\\u4F60\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u4E48\".concat(selectedItem.id),\n        onOk: () => {\n          message.success('删除成功');\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let dataSource = [{\n      id: '0',\n      userName: 'jack',\n      sex: '1',\n      state: '1',\n      interests: '1',\n      birthday: '2000-01-01',\n      address: '支付宝大楼'\n    }, {\n      id: '1',\n      userName: 'jackMa',\n      sex: '1',\n      state: '1',\n      interests: '1',\n      birthday: '2000-01-01',\n      address: '支付宝大楼'\n    }, {\n      id: '2',\n      userName: 'jackChen',\n      sex: '1',\n      state: '1',\n      interests: '1',\n      birthday: '2000-01-01',\n      address: '支付宝大楼'\n    }];\n    dataSource.map((item, index) => {\n      return item.key = index;\n    });\n    this.requestTableData();\n    this.setState({\n      dataSource\n    });\n  } // 动态获取mock数据\n\n\n  render() {\n    const columns = [{\n      title: 'id',\n      // 对应的列名\n      dataIndex: 'id' // 数据源属性值 需要渲染的字段\n\n    }, {\n      title: '用户名',\n      dataIndex: 'userName'\n    }, {\n      title: '性别',\n      dataIndex: 'sex',\n\n      render(sex) {\n        // render 默认接收到dataIndex字段里面到值\n        return sex === 1 ? '男' : '女';\n      }\n\n    }, {\n      title: '状态',\n      dataIndex: 'state',\n\n      render(state) {\n        let config = {\n          '1': 'hello',\n          '2': 'world',\n          '3': 'nihao',\n          '4': '你号么',\n          '5': 'sha diao'\n        };\n        return config[state];\n      }\n\n    }, {\n      title: '爱好',\n      dataIndex: 'interests',\n\n      render(state) {\n        let config = {\n          '1': '游泳',\n          '2': '健身',\n          '3': '🏀',\n          '4': '跑步',\n          '5': '桌球',\n          '6': '爬山',\n          '7': '藏藏个',\n          '8': '你好'\n        };\n        return config[state];\n      }\n\n    }, {\n      title: '生日',\n      dataIndex: 'birthday'\n    }, {\n      title: '地址',\n      dataIndex: 'address'\n    }];\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (key, row) => {\n        console.log(key);\n        console.log(row);\n      }\n    };\n    const rowCheckSelection = {\n      type: 'checkbox',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        let ids = [];\n        selectedRows.map(item => {\n          ids.push(item.id);\n        }); //  const selectedIds = selectedRows.map(item => {\n        //    return item.id\n        //  })\n\n        console.log('selectedRows');\n        console.log(selectedRows);\n        console.log('record');\n        console.log(this.state.selectedItem);\n        this.setState({\n          selectedRowKeys,\n          // 这个是必须的\n          selectedIds: ids,\n          // 附加的\n          selectedRows: selectedRows // 多选时 把选中的所有数据存起来 方便管理 onRow 会存单条数据\n\n        });\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"\\u57FA\\u7840\\u8868\\u683C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: this.state.dataSource,\n      bordered: true,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(Card, {\n      title: \"\\u52A8\\u6001\\u6570\\u636E\\u6E32\\u67D3\\u8868\\u683C - Mock\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      bordered: true,\n      pagination: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })), React.createElement(Card, {\n      title: \"\\u5355\\u9009\\u8868\\u683C - Mock\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      rowSelection: rowSelection // type(单选或者多选); onSelect(选中之后到回调); onChange(选中的切换回调)\n      ,\n      dataSource: this.state.dataSource2,\n      bordered: true,\n      pagination: false,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            // row 当前行被点击之后的回调\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(Card, {\n      title: \"\\u591A\\u9009\\u8868\\u683C - Mock\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleDelete,\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"\\u5220\\u9664\")), React.createElement(Table, {\n      columns: columns,\n      rowSelection: rowCheckSelection // type(单选或者多选); onSelect(选中之后到回调); onChange(选中的切换回调)\n      ,\n      dataSource: this.state.dataSource2,\n      bordered: true,\n      pagination: false,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            // row 当前行被点击之后的回调\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })), React.createElement(Card, {\n      title: \"\\u5206\\u9875 - Mock\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Table, {\n      columns: columns,\n      rowSelection: rowCheckSelection // type(单选或者多选); onSelect(选中之后到回调); onChange(选中的切换回调)\n      ,\n      dataSource: this.state.dataSource3,\n      bordered: true,\n      pagination: Utils.pagination(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/page/table/basicTable.js"],"names":["React","Modal","Card","Table","Button","message","axios","Utils","BasicTable","Component","state","dataSource","dataSource2","dataSource3","selectRowKeys","selectedIds","selectedItem","requestTableData","ajax","url","data","params","page","then","res","code","result","map","item","index","key","setState","onRowClick","record","selectKey","console","log","selectedRowKeys","handleDelete","warning","title","content","id","onOk","success","componentDidMount","userName","sex","interests","birthday","address","render","columns","dataIndex","config","rowSelection","type","onChange","row","rowCheckSelection","selectedRows","ids","push","marginTop","onClick","pagination"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Card, Table, Button, message } from 'antd'\nimport axios from '../../axios/index'\nimport Utils from '../../utils/utils'\n\nexport default class BasicTable extends React.Component {\n\n  state = {\n    dataSource: [],\n    dataSource2: [],\n    dataSource3: [],\n    selectRowKeys: [],\n    selectedIds: [],\n    selectedItem: ''\n  }\n\n  componentDidMount() {\n    let dataSource = [\n      {\n        id: '0',\n        userName: 'jack',\n        sex: '1',\n        state: '1',\n        interests: '1',\n        birthday: '2000-01-01',\n        address: '支付宝大楼'\n      },{\n        id: '1',\n        userName: 'jackMa',\n        sex: '1',\n        state: '1',\n        interests: '1',\n        birthday: '2000-01-01',\n        address: '支付宝大楼'\n      },{\n        id: '2',\n        userName: 'jackChen',\n        sex: '1',\n        state: '1',\n        interests: '1',\n        birthday: '2000-01-01',\n        address: '支付宝大楼'\n      }\n    ]\n    dataSource.map((item, index) => {\n      return item.key = index\n    })\n    this.requestTableData()\n    this.setState({\n      dataSource\n    })\n  }\n\n  // 动态获取mock数据\n  requestTableData = () => {\n    axios.ajax({\n      url: '/table/list',\n      data: {\n        params: {\n          page: 1\n        },\n      }\n    }).then((res) => {\n      if (res.code === 0) {\n        res.result.map((item, index) => {\n          return item.key === index\n        })\n        this.setState({\n          dataSource3: res.result\n        })\n      }\n    })\n  }\n\n  // 用户点击每一行\n  onRowClick = (record, index) => {\n    let selectKey = [index]; // 为什么是数组 因为有可能是多选的\n    console.log('here console')\n    console.log(selectKey)\n    console.log(record)\n    this.setState({\n      selectedRowKeys: selectKey, // 然后把当前所中的key值和当前选中的内容项保存到state中\n      selectedItem: record\n    })\n  }\n\n  // 删除按钮提示\n  handleDelete = () => {\n    const {selectedIds, selectedItem} = this.state\n    Modal.warning({\n      title: '删除',\n      content: `你确定要删除么${selectedItem.id}`,\n      onOk: () => {\n        message.success('删除成功')\n      }\n    })\n  }\n\n  render() {\n    const columns = [\n      {\n        title: 'id', // 对应的列名\n        dataIndex: 'id', // 数据源属性值 需要渲染的字段\n      },\n      {\n        title: '用户名',\n        dataIndex: 'userName'\n      },\n      {\n        title: '性别',\n        dataIndex: 'sex',\n        render(sex) { // render 默认接收到dataIndex字段里面到值\n          return sex === 1 ? '男' : '女'\n        }\n      },\n      {\n        title: '状态',\n        dataIndex: 'state',\n        render(state) {\n          let config = {\n            '1': 'hello',\n            '2': 'world',\n            '3': 'nihao',\n            '4': '你号么',\n            '5': 'sha diao'\n          }\n          return config[state]\n        }\n      },\n      {\n        title: '爱好',\n        dataIndex: 'interests',\n        render(state) {\n          let config = {\n            '1': '游泳',\n            '2': '健身',\n            '3': '🏀',\n            '4': '跑步',\n            '5': '桌球',\n            '6': '爬山',\n            '7': '藏藏个',\n            '8': '你好'\n          }\n          return config[state]\n        }\n      },\n      {\n        title: '生日',\n        dataIndex: 'birthday'\n      },\n      {\n        title: '地址',\n        dataIndex: 'address'\n      }\n    ]\n\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (key, row) => {\n        console.log(key)\n        console.log(row)\n      }\n    }\n\n    const rowCheckSelection = {\n      type: 'checkbox',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        let ids = []\n        selectedRows.map(item => {\n          ids.push(item.id)\n        })\n      //  const selectedIds = selectedRows.map(item => {\n      //    return item.id\n      //  })\n        console.log('selectedRows')\n        console.log(selectedRows)\n        console.log('record')\n        console.log(this.state.selectedItem)\n        this.setState({\n          selectedRowKeys, // 这个是必须的\n          selectedIds: ids, // 附加的\n          selectedRows: selectedRows // 多选时 把选中的所有数据存起来 方便管理 onRow 会存单条数据\n        })\n      }\n    }\n    return (\n      <div>\n        <Card title='基础表格'>\n          <Table\n            columns={columns}\n            dataSource={this.state.dataSource}\n            bordered\n            pagination={false}\n          />\n\n        </Card>\n        <Card title='动态数据渲染表格 - Mock' style={{marginTop: 20}}>\n          <Table\n            columns={columns}\n            dataSource={this.state.dataSource2}\n            bordered\n            pagination={false}\n          />\n\n        </Card>\n\n        <Card title='单选表格 - Mock' style={{marginTop: 20}}>\n          <Table\n            columns={columns}\n            rowSelection={rowSelection} // type(单选或者多选); onSelect(选中之后到回调); onChange(选中的切换回调)\n            dataSource={this.state.dataSource2}\n            bordered\n            pagination={false}\n            onRow={(record, index) => {\n              return {\n                onClick: () => { // row 当前行被点击之后的回调\n                  this.onRowClick(record, index)\n                }\n              }\n            }}\n          />\n\n        </Card>\n        <Card title='多选表格 - Mock' style={{marginTop: 20}}>\n          <div>\n            <Button onClick={this.handleDelete} type='primary'>删除</Button>\n          </div>\n          <Table\n            columns={columns}\n            rowSelection={rowCheckSelection} // type(单选或者多选); onSelect(选中之后到回调); onChange(选中的切换回调)\n            dataSource={this.state.dataSource2}\n            bordered\n            pagination={false}\n            onRow={(record, index) => {\n              return {\n                onClick: () => { // row 当前行被点击之后的回调\n                  this.onRowClick(record, index)\n                }\n              }\n            }}\n          />\n\n        </Card>\n        <Card title='分页 - Mock' style={{marginTop: 20}}>\n          <Table\n            columns={columns}\n            rowSelection={rowCheckSelection} // type(单选或者多选); onSelect(选中之后到回调); onChange(选中的切换回调)\n            dataSource={this.state.dataSource3}\n            bordered\n            pagination={Utils.pagination()}\n          />\n\n        </Card>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}