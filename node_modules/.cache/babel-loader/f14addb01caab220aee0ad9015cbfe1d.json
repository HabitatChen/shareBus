{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/page/order/index.js\";\nimport React from 'react';\nimport { Modal, DatePicker, Button, Card, Form, Select, Table } from 'antd';\nimport Utils from \"../../utils/utils\";\nimport axios from '../../axios';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      pagination: {},\n      selectedRowKeys: '',\n      selectedRowItem: {},\n      selectedIds: '',\n      selectedRows: []\n    };\n    this.params = {\n      page: 1\n    };\n\n    this.openOrderDetail = () => {\n      let item = this.state.selectedRowItem;\n\n      if (!item) {\n        Modal.info({\n          title: '信息',\n          content: '请选择一条订单'\n        });\n        return;\n      }\n\n      window.open(\"#/common/order/detail/%{item.id}\", blank);\n      window.location.href = \"#/common/order/detail/%{item.id}\";\n    };\n\n    this.onRowClick = (record, index) => {\n      let selectedRowKeys = [index];\n      this.setState({\n        selectedRowKeys,\n        selectedRowItem: record\n      });\n    };\n\n    this.requestList = () => {\n      const _this = this;\n\n      axios.ajax({\n        url: '/order/list',\n        data: {\n          params: {\n            page: this.params.page\n          }\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          let list = res.result.item_list.map((item, index) => {\n            item.key = index;\n            return item;\n          });\n          this.setState({\n            list: list,\n            pagination: Utils.pagination(res, current => {\n              _this.params.page = current;\n\n              _this.requestList();\n            })\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  } // 订单详情\n\n\n  render() {\n    const columns = [{\n      title: '订单编号',\n      dataIndex: 'order_sn'\n    }, {\n      title: '车辆编号',\n      dataIndex: 'bike_sn'\n    }, {\n      title: '用户名',\n      dataIndex: 'user_name'\n    }, {\n      title: '手机号',\n      dataIndex: 'mobile'\n    }, {\n      title: '里程',\n      dataIndex: 'distance'\n    }, {\n      title: '行驶时长',\n      dataIndex: 'total_time'\n    }, {\n      title: '状态',\n      dataIndex: 'status'\n    }, {\n      title: '开始时间',\n      dataIndex: 'start_time'\n    }, {\n      title: '结束时间',\n      dataIndex: 'end_time'\n    }, {\n      title: '订单金额',\n      dataIndex: 'total_fee'\n    }, {\n      title: '实付金额',\n      dataIndex: 'user_pay'\n    }];\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        let ids = [];\n        selectedRows.map(item => {\n          ids.push(item.id);\n        });\n        this.setState({\n          selectedRowKeys,\n          // 这个是必须的\n          selectedIds: ids,\n          // 附加的\n          selectedRows: selectedRows // 多选时 把选中的所有数据存起来 方便管理 onRow 会存单条数据\n\n        });\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(FilterForms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.openOrderDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"\\u8BA2\\u5355\\u8BE6\\u60C5\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\u7ED3\\u675F\\u8BA2\\u5355\")), React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      rowSelection: rowSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            // row 当前行被点击之后的回调\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Order;\n\nclass FilterForm extends React.Component {\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      width: 300,\n      label: \"\\u57CE\\u5E02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, getFieldDecorator('city', {\n      initialValue: ''\n    })(React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \" \\u5168\\u90E8 \"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \" \\u5317\\u4EAC \"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" \\u5929\\u6D25 \")))), React.createElement(FormItem, {\n      width: 300,\n      label: \"\\u8BA2\\u5355\\u72B6\\u6001\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, getFieldDecorator('state', {\n      initialValue: ''\n    })(React.createElement(Select, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" \\u5168\\u90E8 \"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" \\u8FDB\\u884C\\u4E2D \"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" \\u7ED3\\u675F\\u884C\\u7A0B \")))), React.createElement(FormItem, {\n      width: 200,\n      label: \"\\u8BA2\\u5355\\u65F6\\u95F4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, getFieldDecorator('start_time', {})(React.createElement(DatePicker, {\n      showTime: true,\n      format: \"YYYY-MM-DD HH:mm:ss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      width: 200,\n      label: \"~\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, getFieldDecorator('end_time', {})(React.createElement(DatePicker, {\n      showTime: true,\n      format: \"YYYY-MM-DD HH:mm:ss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"\\u67E5\\u8BE2\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"\\u91CD\\u7F6E\"))));\n  }\n\n}\n\nconst FilterForms = Form.create()(FilterForm);","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/page/order/index.js"],"names":["React","Modal","DatePicker","Button","Card","Form","Select","Table","Utils","axios","FormItem","Item","Option","Order","Component","state","list","pagination","selectedRowKeys","selectedRowItem","selectedIds","selectedRows","params","page","openOrderDetail","item","info","title","content","window","open","blank","location","href","onRowClick","record","index","setState","requestList","_this","ajax","url","data","then","res","code","result","item_list","map","key","current","componentDidMount","render","columns","dataIndex","rowSelection","type","onChange","ids","push","id","onClick","FilterForm","getFieldDecorator","props","form","initialValue","FilterForms","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Modal, DatePicker, Button, Card, Form, Select, Table} from 'antd'\nimport Utils from \"../../utils/utils\"\nimport axios from '../../axios'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\n\nclass Order extends React.Component {\n\n  state = {\n    list: [],\n    pagination: {},\n    selectedRowKeys: '',\n    selectedRowItem: {},\n    selectedIds: '',\n    selectedRows: []\n  }\n\n  params = {\n    page: 1\n  }\n\n  componentDidMount() {\n    this.requestList()\n  }\n\n  // 订单详情\n  openOrderDetail = () => {\n    let item = this.state.selectedRowItem\n    if (!item) {\n      Modal.info({\n        title: '信息',\n        content: '请选择一条订单'\n      })\n      return\n    }\n    window.open(`#/common/order/detail/%{item.id}`, blank)\n    window.location.href = `#/common/order/detail/%{item.id}`\n  }\n\n  // 表格单行点击\n  // 作用： 1.存该条数据 selectedItem,\n  // 2. selectedId ==> 对应 rowSelection 中的 selectedRowKeys\n  onRowClick = (record, index) => {\n    let selectedRowKeys = [index]\n    this.setState({\n      selectedRowKeys,\n      selectedRowItem: record\n    })\n  }\n\n  requestList = () => {\n    const _this = this\n    axios.ajax({\n      url: '/order/list',\n      data: {\n        params: {\n          page: this.params.page\n        }\n      }\n    }).then(res => {\n      if (res.code == 0) {\n        let list = res.result.item_list.map((item, index) => {\n          item.key = index\n          return item\n        })\n        this.setState({\n          list: list,\n          pagination: Utils.pagination(res, (current) => {\n            _this.params.page = current\n            _this.requestList()\n          })\n        })\n      }\n    })\n\n  }\n\n  render() {\n    const columns = [\n      {\n        title: '订单编号',\n        dataIndex: 'order_sn'\n      },\n      {\n        title: '车辆编号',\n        dataIndex: 'bike_sn'\n      },\n      {\n        title: '用户名',\n        dataIndex: 'user_name',\n      },\n      {\n        title: '手机号',\n        dataIndex: 'mobile',\n      },\n      {\n        title: '里程',\n        dataIndex: 'distance'\n      },\n      {\n        title: '行驶时长',\n        dataIndex: 'total_time',\n      },\n      {\n        title: '状态',\n        dataIndex: 'status',\n      },\n      {\n        title: '开始时间',\n        dataIndex: 'start_time',\n      },\n      {\n        title: '结束时间',\n        dataIndex: 'end_time'\n      },\n      {\n        title: '订单金额',\n        dataIndex: 'total_fee'\n      },\n      {\n        title: '实付金额',\n        dataIndex: 'user_pay'\n      }\n      ]\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        let ids = []\n        selectedRows.map(item => {\n          ids.push(item.id)\n        })\n        this.setState({\n          selectedRowKeys, // 这个是必须的\n          selectedIds: ids, // 附加的\n          selectedRows: selectedRows // 多选时 把选中的所有数据存起来 方便管理 onRow 会存单条数据\n        })\n      }\n    }\n    return (\n      <div>\n        <Card>\n          <FilterForms />\n        </Card>\n        <Card>\n          <Button onClick={this.openOrderDetail}>订单详情</Button>\n          <Button>结束订单</Button>\n        </Card>\n        <div className='content-wrap'>\n          <Table\n            bordered\n            columns={columns}\n            dataSource={this.state.list}\n            pagination={this.state.pagination}\n            rowSelection={rowSelection}\n            onRow={(record, index) => {\n              return {\n                onClick: () => { // row 当前行被点击之后的回调\n                  this.onRowClick(record, index)\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Order\n\nclass FilterForm extends React.Component {\n  render() {\n    const {getFieldDecorator} = this.props.form\n    return (\n      <div>\n        <Form layout=\"inline\">\n          <FormItem width={300} label='城市'>\n            {\n              getFieldDecorator('city', {\n                initialValue: ''\n              })(\n                <Select>\n                  <Option value=''> 全部 </Option>\n                  <Option value='1'> 北京 </Option>\n                  <Option value='2'> 天津 </Option>\n                </Select>\n              )\n            }\n          </FormItem>\n          <FormItem width={300} label='订单状态'>\n            {\n              getFieldDecorator('state', {\n                initialValue: ''\n              })(\n                <Select>\n                  <Option value=''> 全部 </Option>\n                  <Option value='1'> 进行中 </Option>\n                  <Option value='2'> 结束行程 </Option>\n                </Select>\n              )\n            }\n          </FormItem>\n          <FormItem width={200} label='订单时间'>\n            {\n              getFieldDecorator('start_time', {\n              })(\n                <DatePicker showTime format='YYYY-MM-DD HH:mm:ss'/>\n              )\n            }\n          </FormItem>\n          <FormItem width={200} label='~'>\n            {\n              getFieldDecorator('end_time', {\n              })(\n                <DatePicker showTime format='YYYY-MM-DD HH:mm:ss'/>\n              )\n            }\n          </FormItem>\n          <FormItem>\n            <Button type='primary'>查询</Button>\n            <Button>重置</Button>\n          </FormItem>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst FilterForms = Form.create()(FilterForm)\n\n"]},"metadata":{},"sourceType":"module"}