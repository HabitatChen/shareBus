{"ast":null,"code":"var _jsxFileName = \"/Users/habitat/Desktop/share-bus/src/components/Header/index.js\";\nimport React from \"react\";\nimport { Row, Col } from 'antd';\nimport './index.less';\nimport Util from '../../utils/utils';\nimport axiox from '../../axios';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.getCurrentTime = () => {\n      let systemTime = Util.formateDate(new Date().getTime());\n      this.setState({\n        systemTime\n      });\n    };\n\n    this.getCurrentWeather = () => {\n      let city = '北京'; // 下文需对中文进行编码 encodeURIComponent(city)\n\n      axiox.jsonp({\n        url: 'http://api.map.baidu.com/telematics/v3/weather?location=' + encodeURIComponent(city) + '&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\n      }).then(res => {\n        if (res.status === 'success') {\n          let data = res.results[0].weather_data[0];\n          this.setState({\n            weather: data.weather,\n            dayPictureUrl: data.dayPictureUrl\n          });\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      userName: '栖息'\n    });\n    this.getCurrentTime();\n    this.getCurrentWeather();\n    setInterval(this.getCurrentTime, 1000);\n  }\n\n  render() {\n    const _this$state = this.state,\n          systemTime = _this$state.systemTime,\n          weather = _this$state.weather,\n          dayPictureUrl = _this$state.dayPictureUrl;\n    const menuType = this.props.menuType;\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"header-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, menuType ? React.createElement(Col, {\n      span: 6,\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/assets/logo-ant.svg\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"IMMOC \\u901A\\u7528\\u7BA1\\u7406\\u7CFB\\u7EDF\")) : '', React.createElement(Col, {\n      span: menuType ? '18' : '24',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \\u4F60\\u597D\\uFF0C\", this.state.userName, \" \"), React.createElement(\"a\", {\n      href: \"/\",\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u9000\\u51FA\"))), menuType ? '' : React.createElement(Row, {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 4,\n      className: \"breadcrumb-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.menuName), React.createElement(Col, {\n      span: 20,\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"weather-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, systemTime), React.createElement(\"span\", {\n      className: \"weather-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: dayPictureUrl,\n      alt: \"weather\",\n      style: {\n        width: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), weather))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    menuName: state.menuName\n  };\n};\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/Users/habitat/Desktop/share-bus/src/components/Header/index.js"],"names":["React","Row","Col","Util","axiox","connect","Header","Component","state","getCurrentTime","systemTime","formateDate","Date","getTime","setState","getCurrentWeather","city","jsonp","url","encodeURIComponent","then","res","status","data","results","weather_data","weather","dayPictureUrl","componentWillMount","userName","setInterval","render","menuType","props","color","menuName","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col } from 'antd'\nimport './index.less'\nimport Util from '../../utils/utils'\nimport axiox from '../../axios'\nimport { connect } from 'react-redux'\n\nclass Header extends React.Component {\n\n  state = {}\n\n  componentWillMount() {\n    this.setState({\n      userName: '栖息'\n    })\n    this.getCurrentTime()\n    this.getCurrentWeather()\n    setInterval(this.getCurrentTime, 1000)\n  }\n\n  getCurrentTime = () => {\n    let systemTime = Util.formateDate(new Date().getTime())\n    this.setState({\n      systemTime\n    })\n  }\n\n  // axios 不能跨域 ==> 使用 jsonp 跨域\n  getCurrentWeather = () => {\n    let city = '北京' // 下文需对中文进行编码 encodeURIComponent(city)\n    axiox.jsonp({\n      url: 'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2',\n    }).then(res => {\n      if (res.status === 'success') {\n        let data = res.results[0].weather_data[0]\n        this.setState({\n          weather: data.weather,\n          dayPictureUrl: data.dayPictureUrl\n        })\n      }\n    })\n  }\n\n  render() {\n    const { systemTime, weather, dayPictureUrl } = this.state\n    const { menuType } = this.props\n    return (\n      <div className='header'>\n        <Row className='header-top'>\n          {\n            menuType ? <Col span={6} className='logo'>\n              <img src=\"/assets/logo-ant.svg\" alt=\"\"/>\n              <span>IMMOC 通用管理系统</span>\n            </Col> : ''\n          }\n          <Col span={menuType ? '18' : '24'}>\n            <span> 你好，{this.state.userName} </span>\n            <a href=\"/\" style={{color: 'black'}}>退出</a>\n          </Col>\n        </Row>\n        {\n          menuType ? '' : <Row className='breadcrumb'>\n            <Col span={4} className='breadcrumb-title'>\n              {this.props.menuName}\n            </Col>\n            <Col span={20} className='weather'>\n              <span className='weather-date'>{systemTime}</span>\n              <span className='weather-content'>\n              <img src={dayPictureUrl} alt=\"weather\" style={{width: '25px'}}/>\n                {weather}\n            </span>\n            </Col>\n          </Row>\n        }\n\n\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    menuName: state.menuName\n  }\n}\n\nexport default connect(mapStateToProps)(Header)"]},"metadata":{},"sourceType":"module"}